// deno-fmt-ignore-file
const componentRegistry=new Map;class Component{static get $name(){throw new Error("plese define name")}static define(){let a=this;class b extends HTMLElement{#a;#b;constructor(a){super(),this.#b=a??{children:[]},this.#a=this.attachShadow({mode:"closed"})}connectedCallback(){let c=this.#a,b=new a(this.#b);if(b.#c)c.appendChild(b.#c.ref);else throw new Error("prease call this.render()")}}return componentRegistry.set(a,b),customElements.define(a.$name,b),this}#c;constructor(_){}render(a){this.#c=a}static isComponent(a){try{return a.#c,!0}catch{return!1}}}class VNode{#d;constructor(a,c,d){let b;if("string"==typeof a){let e=customElements.get(a);b=e?new e({...c,children:d}):document.createElement(a)}else if(Component.isComponent(a)){let g=componentRegistry.get(a);b=new g({...c,children:d})}else b=a({...c,children:d}).ref;for(let[h,i]of Object.entries(c))b.setAttribute(h,`${i}`);let f=nodeFromChildren(d);f&&b.appendChild(f),this.#d=b}setChild(b){this.#d.innerHTML="";let a=nodeFromChildren([b]);a&&this.#d.appendChild(a)}setAttribute(a){for(let[b,c]of Object.entries(a))this.#d.setAttribute(b,`${c}`)}get ref(){return this.#d}}function nodeFromChildren(c){if(!c.length)return;let b=document.createDocumentFragment();for(let a of c)if(Array.isArray(a)){let d=nodeFromChildren(a);d&&b.appendChild(d)}else a instanceof VNode?b.appendChild(a.ref):"object"==typeof a&&null!==a?b.appendChild(document.createTextNode(JSON.stringify(a))):b.appendChild(document.createTextNode(`${a}`));return b}
